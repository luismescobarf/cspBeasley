Application parameters:
  batch  =>  nothing
  tikz  =>  "/TIKZ/csp100_Solomon.dot"
  instance  =>  "/IN/csp100_Solomon.txt"
  out  =>  "/OUT/csp100_Solomon.sol"
  nosolve  =>  false
  ub  =>  1.0e7
  sol  =>  nothing
  cfg  =>  "/VRPTW/src/../config/VRPTW_set_1.cfg"
  enable_cap_res  =>  false
Min 1466 x[(0, 1)] + 1466 x[(0, 2)] + 1466 x[(0, 3)] + 1466 x[(0, 4)] + 1466 x[(0, 5)] + 1466 x[(0, 6)] + 1466 x[(0, 7)] + 1466 x[(0, 8)] + 1466 x[(0, 9)] + 1466 x[(0, 10)] + 1466 x[(0, 11)] + 1466 x[(0, 12)] + 1466 x[(0, 13)] + 1466 x[(0, 14)] + 1466 x[(0, 15)] + 1466 x[(0, 16)] + 1466 x[(0, 17)] + 1466 x[(0, 18)] + 1466 x[(0, 19)] + 1466 x[(0, 20)] + 1466 x[(0, 21)] + 1466 x[(0, 22)] + 1466 x[(0, 23)] + 1466 x[(0, 24)] + 1466 x[(0, 25)] + 1466 x[(0, 26)] + 1466 x[(0, 27)] + 1466 x[(0, 28)] + 1466 x[(0, 29)] + 1466 x[(0, 30)] + 1466 x[(0, 31)] + 1466 x[(0, 32)] + 1466 x[(0, 33)] + 1466 x[(0, 34)] + 1466 x[(0, 35)] + 1466 x[(0, 36)] + 1466 x[(0, 37)] + 1466 x[(0, 38)] + 1466 x[(0, 39)] + 1466 x[(0, 40)] + 1466 x[(0, 41)] + 1466 x[(0, 42)] + 1466 x[(0, 43)] + 1466 x[(0, 44)] + 1466 x[(0, 45)] + 1466 x[(0, 46)] + 1466 x[(0, 47)] + 1466 x[(0, 48)] + 1466 x[(0, 49)] + 1466 x[(0, 50)] + 1466 x[(0, 51)] + 1466 x[(0, 52)] + 1466 x[(0, 53)] + 1466 x[(0, 54)] + 1466 x[(0, 55)] + 1466 x[(0, 56)] + 1466 x[(0, 57)] + 1466 x[(0, 58)] + 1466 x[(0, 59)] + 1466 x[(0, 60)] + 1466 x[(0, 61)] + 1466 x[(0, 62)] + 1466 x[(0, 63)] + 1466 x[(0, 64)] + 1466 x[(0, 65)] + 1466 x[(0, 66)] + 1466 x[(0, 67)] + 1466 x[(0, 68)] + 1466 x[(0, 69)] + 1466 x[(0, 70)] + 1466 x[(0, 71)] + 1466 x[(0, 72)] + 1466 x[(0, 73)] + 1466 x[(0, 74)] + 1466 x[(0, 75)] + 1466 x[(0, 76)] + 1466 x[(0, 77)] + 1466 x[(0, 78)] + 1466 x[(0, 79)] + 1466 x[(0, 80)] + 1466 x[(0, 81)] + 1466 x[(0, 82)] + 1466 x[(0, 83)] + 1466 x[(0, 84)] + 1466 x[(0, 85)] + 1466 x[(0, 86)] + 1466 x[(0, 87)] + 1466 x[(0, 88)] + 1466 x[(0, 89)] + 1466 x[(0, 90)] + 1466 x[(0, 91)] + 1466 x[(0, 92)] + 1466 x[(0, 93)] + 1466 x[(0, 94)] + 1466 x[(0, 95)] + 1466 x[(0, 96)] + 1466 x[(0, 97)] + 1466 x[(0, 98)] + 1466 x[(0, 99)] + 1466 x[(0, 100)] + 105 x[(1, 12)] + 153 x[(1, 16)] + 106 x[(1, 17)] + 137 x[(1, 19)] + 261 x[(1, 20)] + 304 x[(1, 21)] + 311 x[(1, 22)] + 375 x[(1, 24)] + 274 x[(1, 25)] + 212 x[(1, 26)] + 302 x[(1, 28)] + 469 x[(1, 32)] + 146 x[(2, 11)] + 155 x[(2, 13)] + 146 x[(2, 14)] + 150 x[(2, 16)] + 243 x[(2, 18)] + 230 x[(2, 19)] + 225 x[(2, 21)] + 428 x[(2, 22)] + 278 x[(2, 24)] + 501 x[(2, 25)] + 291 x[(2, 26)] + 482 x[(2, 27)] + 306 x[(2, 28)] + 427 x[(2, 32)] + 42 x[(3, 20)] + 90 x[(3, 22)] + 166 x[(3, 24)] + 122 x[(3, 25)] + 137 x[(3, 27)] + 339 x[(3, 32)] + 85 x[(4, 12)] + 153 x[(4, 13)] + 182 x[(4, 18)] + 219 x[(4, 20)] + 269 x[(4, 22)] + 323 x[(4, 25)] + 270 x[(4, 27)] + 353 x[(4, 28)] + 406 x[(4, 32)] + 204 x[(5, 13)] + 244 x[(5, 17)] + 162 x[(5, 19)] + 232 x[(5, 22)] + 419 x[(5, 24)] + 324 x[(5, 25)] + 431 x[(5, 26)] + 382 x[(5, 27)] + 427 x[(5, 28)] + 436 x[(5, 29)] + 661 x[(5, 32)] + 106 x[(6, 15)] + 96 x[(6, 17)] + 149 x[(6, 19)] + 147 x[(6, 20)] + 265 x[(6, 21)] + 242 x[(6, 22)] + 199 x[(6, 24)] + 338 x[(6, 27)] + 338 x[(6, 29)] + 470 x[(6, 30)] + 582 x[(6, 31)] + 497 x[(6, 32)] + 47 x[(7, 21)] + 132 x[(7, 26)] + 267 x[(7, 31)] + 216 x[(7, 32)] + 55 x[(8, 20)] + 141 x[(8, 23)] + 205 x[(8, 26)] + 215 x[(8, 28)] + 226 x[(8, 29)] + 322 x[(8, 30)] + 246 x[(8, 31)] + 298 x[(8, 32)] + 46 x[(9, 23)] + 98 x[(9, 27)] + 174 x[(9, 29)] + 275 x[(9, 31)] + 19 x[(10, 17)] + 145 x[(10, 21)] + 160 x[(10, 23)] + 233 x[(10, 25)] + 187 x[(10, 26)] + 170 x[(10, 28)] + 404 x[(10, 29)] + 243 x[(10, 31)] + 251 x[(10, 32)] + 59 x[(11, 31)] + 159 x[(11, 33)] + 160 x[(11, 36)] + 252 x[(11, 37)] + 314 x[(11, 39)] + 315 x[(11, 42)] + 390 x[(11, 45)] + 50 x[(12, 28)] + 197 x[(12, 32)] + 275 x[(12, 33)] + 391 x[(12, 36)] + 424 x[(12, 37)] + 530 x[(12, 39)] + 353 x[(12, 42)] + 411 x[(12, 45)] + 303 x[(13, 33)] + 402 x[(13, 36)] + 424 x[(13, 37)] + 429 x[(13, 39)] + 546 x[(13, 42)] + 327 x[(13, 45)] + 147 x[(14, 30)] + 238 x[(14, 36)] + 415 x[(14, 37)] + 289 x[(14, 39)] + 432 x[(14, 42)] + 405 x[(14, 45)] + 32 x[(15, 23)] + 303 x[(15, 31)] + 344 x[(15, 33)] + 293 x[(15, 36)] + 438 x[(15, 37)] + 324 x[(15, 39)] + 381 x[(15, 42)] + 480 x[(15, 45)] + 72 x[(16, 31)] + 185 x[(16, 33)] + 227 x[(16, 36)] + 202 x[(16, 37)] + 311 x[(16, 39)] + 284 x[(16, 42)] + 231 x[(16, 45)] + 127 x[(17, 33)] + 116 x[(17, 36)] + 237 x[(17, 37)] + 354 x[(17, 45)] + 52 x[(18, 27)] + 111 x[(18, 30)] + 217 x[(18, 33)] + 376 x[(18, 35)] + 281 x[(18, 36)] + 315 x[(18, 37)] + 304 x[(18, 39)] + 325 x[(18, 42)] + 544 x[(18, 45)] + 83 x[(19, 32)] + 132 x[(19, 33)] + 256 x[(19, 37)] + 203 x[(19, 39)] + 372 x[(19, 42)] + 288 x[(19, 43)] + 420 x[(19, 45)] + 398 x[(19, 48)] + 40 x[(20, 25)] + 58 x[(20, 26)] + 116 x[(20, 30)] + 228 x[(20, 31)] + 382 x[(20, 34)] + 243 x[(20, 35)] + 327 x[(20, 36)] + 413 x[(20, 37)] + 417 x[(20, 39)] + 397 x[(20, 42)] + 491 x[(20, 43)] + 540 x[(20, 45)] + 402 x[(20, 46)] + 602 x[(20, 48)] + 102 x[(21, 31)] + 260 x[(21, 33)] + 372 x[(21, 37)] + 354 x[(21, 38)] + 372 x[(21, 39)] + 419 x[(21, 40)] + 382 x[(21, 41)] + 458 x[(21, 42)] + 394 x[(21, 43)] + 446 x[(21, 45)] + 435 x[(21, 46)] + 467 x[(21, 48)] + 467 x[(21, 50)] + 187 x[(22, 37)] + 113 x[(22, 38)] + 191 x[(22, 39)] + 192 x[(22, 40)] + 157 x[(22, 43)] + 202 x[(22, 45)] + 241 x[(22, 48)] + 277 x[(22, 50)] + 78 x[(23, 41)] + 45 x[(23, 42)] + 104 x[(23, 48)] + 181 x[(23, 49)] + 185 x[(23, 50)] + 94 x[(24, 30)] + 232 x[(24, 35)] + 336 x[(24, 37)] + 372 x[(24, 38)] + 430 x[(24, 40)] + 244 x[(24, 41)] + 308 x[(24, 42)] + 292 x[(24, 43)] + 434 x[(24, 45)] + 415 x[(24, 46)] + 459 x[(24, 48)] + 297 x[(24, 49)] + 528 x[(24, 50)] + 142 x[(25, 33)] + 177 x[(25, 34)] + 355 x[(25, 35)] + 272 x[(25, 36)] + 236 x[(25, 37)] + 385 x[(25, 38)] + 405 x[(25, 39)] + 287 x[(25, 40)] + 321 x[(25, 41)] + 455 x[(25, 42)] + 358 x[(25, 43)] + 418 x[(25, 45)] + 299 x[(25, 46)] + 363 x[(25, 48)] + 428 x[(25, 49)] + 334 x[(25, 50)] + 416 x[(25, 52)] + 88 x[(26, 32)] + 142 x[(26, 33)] + 144 x[(26, 34)] + 313 x[(26, 37)] + 168 x[(26, 38)] + 271 x[(26, 39)] + 238 x[(26, 40)] + 244 x[(26, 42)] + 271 x[(26, 43)] + 257 x[(26, 45)] + 282 x[(26, 46)] + 394 x[(26, 48)] + 296 x[(26, 49)] + 520 x[(26, 50)] + 550 x[(26, 52)] + 229 x[(27, 35)] + 225 x[(27, 37)] + 186 x[(27, 38)] + 361 x[(27, 40)] + 289 x[(27, 41)] + 236 x[(27, 42)] + 324 x[(27, 43)] + 297 x[(27, 44)] + 338 x[(27, 45)] + 408 x[(27, 46)] + 455 x[(27, 48)] + 443 x[(27, 49)] + 535 x[(27, 50)] + 326 x[(27, 52)] + 107 x[(28, 34)] + 112 x[(28, 37)] + 217 x[(28, 39)] + 234 x[(28, 41)] + 153 x[(28, 44)] + 213 x[(28, 45)] + 238 x[(28, 48)] + 366 x[(28, 49)] + 353 x[(28, 50)] + 318 x[(28, 52)] + 24 x[(29, 35)] + 35 x[(29, 36)] + 60 x[(29, 39)] + 165 x[(29, 45)] + 220 x[(29, 47)] + 172 x[(29, 50)] + 252 x[(29, 52)] + 306 x[(29, 53)] + 285 x[(29, 57)] + 460 x[(29, 58)] + 27 x[(30, 38)] + 77 x[(30, 42)] + 114 x[(30, 43)] + 120 x[(30, 45)] + 130 x[(30, 46)] + 174 x[(30, 50)] + 158 x[(30, 51)] + 206 x[(30, 52)] + 242 x[(30, 53)] + 371 x[(30, 57)] + 373 x[(30, 58)] + 24 x[(31, 37)] + 69 x[(31, 40)] + 101 x[(31, 42)] + 144 x[(31, 45)] + 223 x[(31, 49)] + 243 x[(31, 52)] + 255 x[(31, 53)] + 488 x[(31, 57)] + 554 x[(31, 58)] + 63 x[(32, 36)] + 119 x[(32, 39)] + 166 x[(32, 42)] + 154 x[(32, 43)] + 142 x[(32, 45)] + 156 x[(32, 47)] + 176 x[(32, 49)] + 313 x[(32, 50)] + 300 x[(32, 51)] + 348 x[(32, 52)] + 287 x[(32, 53)] + 578 x[(32, 57)] + 457 x[(32, 58)] + 119 x[(33, 53)] + 185 x[(33, 57)] + 190 x[(33, 58)] + 414 x[(33, 61)] + 469 x[(33, 70)] + 105 x[(34, 57)] + 135 x[(34, 58)] + 201 x[(34, 70)] + 116 x[(35, 55)] + 173 x[(35, 58)] + 203 x[(35, 59)] + 209 x[(35, 61)] + 382 x[(35, 70)] + 275 x[(35, 71)] + 18 x[(36, 43)] + 65 x[(36, 47)] + 92 x[(36, 49)] + 108 x[(36, 52)] + 177 x[(36, 53)] + 235 x[(36, 54)] + 277 x[(36, 55)] + 334 x[(36, 57)] + 247 x[(36, 58)] + 420 x[(36, 59)] + 486 x[(36, 61)] + 497 x[(36, 67)] + 451 x[(36, 70)] + 573 x[(36, 71)] + 206 x[(37, 57)] + 226 x[(37, 58)] + 277 x[(37, 59)] + 276 x[(37, 60)] + 311 x[(37, 61)] + 323 x[(37, 62)] + 341 x[(37, 67)] + 528 x[(37, 68)] + 580 x[(37, 70)] + 493 x[(37, 71)] + 573 x[(37, 73)] + 135 x[(38, 59)] + 182 x[(38, 60)] + 212 x[(38, 61)] + 258 x[(38, 67)] + 197 x[(38, 68)] + 201 x[(38, 70)] + 236 x[(38, 71)] + 426 x[(38, 73)] + 105 x[(39, 50)] + 137 x[(39, 51)] + 229 x[(39, 55)] + 222 x[(39, 58)] + 401 x[(39, 59)] + 358 x[(39, 60)] + 441 x[(39, 61)] + 335 x[(39, 62)] + 260 x[(39, 63)] + 405 x[(39, 67)] + 431 x[(39, 68)] + 379 x[(39, 70)] + 383 x[(39, 71)] + 733 x[(39, 73)] + 146 x[(40, 63)] + 207 x[(40, 65)] + 211 x[(40, 67)] + 203 x[(40, 68)] + 198 x[(40, 71)] + 421 x[(40, 73)] + 97 x[(41, 57)] + 106 x[(41, 59)] + 235 x[(41, 62)] + 237 x[(41, 63)] + 168 x[(41, 65)] + 293 x[(41, 67)] + 183 x[(41, 70)] + 284 x[(41, 73)] + 413 x[(41, 81)] + 123 x[(42, 51)] + 127 x[(42, 53)] + 111 x[(42, 54)] + 288 x[(42, 56)] + 243 x[(42, 58)] + 294 x[(42, 59)] + 302 x[(42, 60)] + 345 x[(42, 61)] + 338 x[(42, 62)] + 453 x[(42, 63)] + 514 x[(42, 64)] + 355 x[(42, 65)] + 536 x[(42, 67)] + 523 x[(42, 68)] + 389 x[(42, 69)] + 534 x[(42, 70)] + 469 x[(42, 71)] + 418 x[(42, 73)] + 455 x[(42, 81)] + 120 x[(43, 58)] + 159 x[(43, 59)] + 152 x[(43, 60)] + 291 x[(43, 62)] + 326 x[(43, 63)] + 190 x[(43, 65)] + 393 x[(43, 67)] + 354 x[(43, 68)] + 236 x[(43, 69)] + 293 x[(43, 70)] + 279 x[(43, 71)] + 476 x[(43, 73)] + 369 x[(43, 81)] + 108 x[(44, 63)] + 106 x[(44, 64)] + 175 x[(44, 69)] + 118 x[(44, 70)] + 151 x[(44, 71)] + 275 x[(44, 73)] + 348 x[(44, 81)] + 61 x[(45, 51)] + 226 x[(45, 55)] + 203 x[(45, 56)] + 248 x[(45, 57)] + 324 x[(45, 58)] + 372 x[(45, 59)] + 401 x[(45, 60)] + 314 x[(45, 61)] + 364 x[(45, 62)] + 491 x[(45, 63)] + 444 x[(45, 64)] + 476 x[(45, 65)] + 299 x[(45, 67)] + 498 x[(45, 68)] + 386 x[(45, 69)] + 357 x[(45, 70)] + 449 x[(45, 71)] + 599 x[(45, 73)] + 558 x[(45, 81)] + 30 x[(46, 55)] + 111 x[(46, 57)] + 194 x[(46, 61)] + 197 x[(46, 62)] + 245 x[(46, 63)] + 242 x[(46, 64)] + 307 x[(46, 65)] + 265 x[(46, 67)] + 211 x[(46, 68)] + 302 x[(46, 69)] + 272 x[(46, 70)] + 326 x[(46, 71)] + 485 x[(46, 73)] + 520 x[(46, 81)] + 71 x[(47, 67)] + 68 x[(47, 69)] + 103 x[(47, 71)] + 237 x[(47, 81)] + 226 x[(47, 83)] + 79 x[(48, 56)] + 197 x[(48, 59)] + 164 x[(48, 60)] + 266 x[(48, 62)] + 186 x[(48, 63)] + 269 x[(48, 66)] + 322 x[(48, 67)] + 275 x[(48, 68)] + 347 x[(48, 69)] + 404 x[(48, 70)] + 298 x[(48, 71)] + 321 x[(48, 73)] + 612 x[(48, 78)] + 469 x[(48, 81)] + 464 x[(48, 83)] + 45 x[(49, 58)] + 161 x[(49, 61)] + 183 x[(49, 62)] + 123 x[(49, 63)] + 210 x[(49, 69)] + 255 x[(49, 70)] + 221 x[(49, 71)] + 234 x[(49, 72)] + 390 x[(49, 73)] + 459 x[(49, 78)] + 342 x[(49, 80)] + 298 x[(49, 81)] + 371 x[(49, 83)] + 190 x[(50, 61)] + 135 x[(50, 62)] + 192 x[(50, 64)] + 239 x[(50, 65)] + 174 x[(50, 67)] + 261 x[(50, 70)] + 398 x[(50, 72)] + 277 x[(50, 73)] + 254 x[(50, 75)] + 276 x[(50, 78)] + 341 x[(50, 80)] + 288 x[(50, 81)] + 553 x[(50, 83)] + 453 x[(50, 84)] + 108 x[(51, 65)] + 97 x[(51, 66)] + 118 x[(51, 67)] + 134 x[(51, 69)] + 175 x[(51, 71)] + 168 x[(51, 73)] + 309 x[(51, 75)] + 272 x[(51, 78)] + 218 x[(51, 80)] + 399 x[(51, 81)] + 365 x[(51, 83)] + 489 x[(51, 84)] + 71 x[(52, 63)] + 135 x[(52, 64)] + 138 x[(52, 65)] + 98 x[(52, 66)] + 154 x[(52, 69)] + 279 x[(52, 72)] + 299 x[(52, 73)] + 250 x[(52, 75)] + 230 x[(52, 78)] + 368 x[(52, 80)] + 421 x[(52, 81)] + 392 x[(52, 83)] + 373 x[(52, 84)] + 71 x[(53, 67)] + 137 x[(53, 72)] + 254 x[(53, 83)] + 448 x[(53, 84)] + 104 x[(54, 81)] + 254 x[(55, 84)] + 63 x[(57, 63)] + 114 x[(57, 69)] + 98 x[(57, 70)] + 156 x[(57, 72)] + 160 x[(57, 74)] + 262 x[(57, 75)] + 253 x[(57, 76)] + 260 x[(57, 77)] + 265 x[(57, 79)] + 347 x[(57, 80)] + 237 x[(57, 81)] + 374 x[(57, 83)] + 333 x[(57, 84)] + 690 x[(57, 89)] + 202 x[(58, 79)] + 161 x[(58, 80)] + 230 x[(58, 81)] + 206 x[(58, 82)] + 367 x[(58, 83)] + 482 x[(58, 84)] + 483 x[(58, 86)] + 416 x[(58, 89)] + 71 x[(59, 72)] + 117 x[(59, 78)] + 208 x[(59, 82)] + 242 x[(59, 83)] + 328 x[(59, 84)] + 414 x[(59, 86)] + 484 x[(59, 89)] + 632 x[(59, 92)] + 103 x[(60, 83)] + 144 x[(60, 85)] + 268 x[(60, 86)] + 436 x[(60, 89)] + 321 x[(60, 92)] + 46 x[(61, 72)] + 65 x[(61, 74)] + 112 x[(61, 78)] + 198 x[(61, 80)] + 266 x[(61, 83)] + 331 x[(61, 85)] + 407 x[(61, 86)] + 462 x[(61, 89)] + 573 x[(61, 92)] + 88 x[(62, 82)] + 171 x[(62, 84)] + 241 x[(62, 89)] + 305 x[(62, 92)] + 41 x[(63, 83)] + 204 x[(63, 85)] + 200 x[(63, 86)] + 291 x[(63, 88)] + 386 x[(63, 89)] + 385 x[(63, 92)] + 160 x[(64, 85)] + 225 x[(64, 88)] + 292 x[(64, 89)] + 110 x[(65, 84)] + 258 x[(65, 89)] + 385 x[(65, 92)] + 54 x[(66, 84)] + 342 x[(66, 92)] + 44 x[(67, 75)] + 115 x[(67, 80)] + 69 x[(67, 81)] + 187 x[(67, 82)] + 282 x[(67, 85)] + 385 x[(67, 86)] + 317 x[(67, 88)] + 319 x[(67, 89)] + 366 x[(67, 90)] + 610 x[(67, 92)] + 117 x[(68, 84)] + 223 x[(68, 85)] + 234 x[(68, 86)] + 305 x[(68, 89)] + 279 x[(68, 92)] + 61 x[(69, 84)] + 296 x[(69, 88)] + 248 x[(69, 90)] + 233 x[(69, 91)] + 327 x[(69, 92)] + 34 x[(70, 74)] + 76 x[(70, 77)] + 287 x[(70, 84)] + 354 x[(70, 85)] + 432 x[(70, 86)] + 373 x[(70, 88)] + 326 x[(70, 89)] + 471 x[(70, 90)] + 339 x[(70, 91)] + 413 x[(70, 92)] + 74 x[(71, 80)] + 90 x[(71, 82)] + 130 x[(71, 84)] + 275 x[(71, 86)] + 211 x[(71, 87)] + 394 x[(71, 88)] + 390 x[(71, 89)] + 362 x[(71, 90)] + 279 x[(71, 91)] + 342 x[(71, 92)] + 39 x[(72, 85)] + 161 x[(72, 90)] + 273 x[(72, 91)] + 200 x[(72, 92)] + 198 x[(73, 85)] + 328 x[(73, 87)] + 264 x[(73, 89)] + 383 x[(73, 90)] + 413 x[(73, 91)] + 503 x[(73, 92)] + 509 x[(73, 94)] + 520 x[(73, 96)] + 57 x[(74, 89)] + 183 x[(74, 94)] + 207 x[(74, 96)] + 109 x[(75, 90)] + 237 x[(75, 91)] + 180 x[(75, 92)] + 311 x[(75, 96)] + 491 x[(75, 100)] + 66 x[(76, 92)] + 239 x[(76, 96)] + 292 x[(76, 100)] + 169 x[(77, 94)] + 143 x[(77, 96)] + 109 x[(78, 86)] + 167 x[(78, 89)] + 291 x[(78, 91)] + 275 x[(78, 92)] + 314 x[(78, 94)] + 286 x[(78, 96)] + 580 x[(78, 100)] + 84 x[(79, 91)] + 243 x[(80, 90)] + 210 x[(80, 92)] + 366 x[(80, 94)] + 412 x[(80, 95)] + 446 x[(80, 100)] + 115 x[(81, 85)] + 164 x[(81, 87)] + 207 x[(81, 88)] + 309 x[(81, 89)] + 189 x[(81, 90)] + 371 x[(81, 91)] + 421 x[(81, 92)] + 493 x[(81, 94)] + 452 x[(81, 95)] + 298 x[(81, 96)] + 507 x[(81, 100)] + 5 x[(82, 93)] + 64 x[(82, 96)] + 89 x[(83, 86)] + 104 x[(83, 87)] + 148 x[(83, 88)] + 233 x[(83, 90)] + 220 x[(83, 92)] + 232 x[(83, 93)] + 334 x[(83, 94)] + 409 x[(83, 95)] + 426 x[(83, 96)] + 361 x[(83, 98)] + 573 x[(83, 100)] + 238 x[(84, 91)] + 234 x[(84, 92)] + 189 x[(84, 93)] + 196 x[(84, 95)] + 214 x[(84, 96)] + 283 x[(84, 97)] + 262 x[(84, 98)] + 429 x[(84, 99)] + 360 x[(84, 100)] + 83 x[(85, 97)] + 72 x[(86, 95)] + 172 x[(86, 98)] + 202 x[(86, 99)] + 156 x[(86, 100)] + 77 x[(89, 94)] + 145 x[(89, 96)] + 127 x[(89, 99)] + 208 x[(89, 100)] + 117 x[(92, 98)] + 108 x[(92, 99)] + 142 x[(92, 100)]
Subject to
 x[(0, 1)] = 1
 x[(0, 2)] = 1
 x[(0, 3)] = 1
 x[(0, 4)] = 1
 x[(0, 5)] = 1
 x[(0, 6)] = 1
 x[(0, 7)] = 1
 x[(0, 8)] = 1
 x[(0, 9)] = 1
 x[(0, 10)] = 1
 x[(0, 11)] + x[(2, 11)] = 1
 x[(0, 12)] + x[(1, 12)] + x[(4, 12)] = 1
 x[(0, 13)] + x[(2, 13)] + x[(4, 13)] + x[(5, 13)] = 1
 x[(0, 14)] + x[(2, 14)] = 1
 x[(0, 15)] + x[(6, 15)] = 1
 x[(0, 16)] + x[(1, 16)] + x[(2, 16)] = 1
 x[(0, 17)] + x[(1, 17)] + x[(5, 17)] + x[(6, 17)] + x[(10, 17)] = 1
 x[(0, 18)] + x[(2, 18)] + x[(4, 18)] = 1
 x[(0, 19)] + x[(1, 19)] + x[(2, 19)] + x[(5, 19)] + x[(6, 19)] = 1
 x[(0, 20)] + x[(1, 20)] + x[(3, 20)] + x[(4, 20)] + x[(6, 20)] + x[(8, 20)] = 1
 x[(0, 21)] + x[(1, 21)] + x[(2, 21)] + x[(6, 21)] + x[(7, 21)] + x[(10, 21)] = 1
 x[(0, 22)] + x[(1, 22)] + x[(2, 22)] + x[(3, 22)] + x[(4, 22)] + x[(5, 22)] + x[(6, 22)] = 1
 x[(0, 23)] + x[(8, 23)] + x[(9, 23)] + x[(10, 23)] + x[(15, 23)] = 1
 x[(0, 24)] + x[(1, 24)] + x[(2, 24)] + x[(3, 24)] + x[(5, 24)] + x[(6, 24)] = 1
 x[(0, 25)] + x[(1, 25)] + x[(2, 25)] + x[(3, 25)] + x[(4, 25)] + x[(5, 25)] + x[(10, 25)] + x[(20, 25)] = 1
 x[(0, 26)] + x[(1, 26)] + x[(2, 26)] + x[(5, 26)] + x[(7, 26)] + x[(8, 26)] + x[(10, 26)] + x[(20, 26)] = 1
 x[(0, 27)] + x[(2, 27)] + x[(3, 27)] + x[(4, 27)] + x[(5, 27)] + x[(6, 27)] + x[(9, 27)] + x[(18, 27)] = 1
 x[(0, 28)] + x[(1, 28)] + x[(2, 28)] + x[(4, 28)] + x[(5, 28)] + x[(8, 28)] + x[(10, 28)] + x[(12, 28)] = 1
 x[(0, 29)] + x[(5, 29)] + x[(6, 29)] + x[(8, 29)] + x[(9, 29)] + x[(10, 29)] = 1
 x[(0, 30)] + x[(6, 30)] + x[(8, 30)] + x[(14, 30)] + x[(18, 30)] + x[(20, 30)] + x[(24, 30)] = 1
 x[(0, 31)] + x[(6, 31)] + x[(7, 31)] + x[(8, 31)] + x[(9, 31)] + x[(10, 31)] + x[(11, 31)] + x[(15, 31)] + x[(16, 31)] + x[(20, 31)] + x[(21, 31)] = 1
 x[(0, 32)] + x[(1, 32)] + x[(2, 32)] + x[(3, 32)] + x[(4, 32)] + x[(5, 32)] + x[(6, 32)] + x[(7, 32)] + x[(8, 32)] + x[(10, 32)] + x[(12, 32)] + x[(19, 32)] + x[(26, 32)] = 1
 x[(0, 33)] + x[(11, 33)] + x[(12, 33)] + x[(13, 33)] + x[(15, 33)] + x[(16, 33)] + x[(17, 33)] + x[(18, 33)] + x[(19, 33)] + x[(21, 33)] + x[(25, 33)] + x[(26, 33)] = 1
 x[(0, 34)] + x[(20, 34)] + x[(25, 34)] + x[(26, 34)] + x[(28, 34)] = 1
 x[(0, 35)] + x[(18, 35)] + x[(20, 35)] + x[(24, 35)] + x[(25, 35)] + x[(27, 35)] + x[(29, 35)] = 1
 x[(0, 36)] + x[(11, 36)] + x[(12, 36)] + x[(13, 36)] + x[(14, 36)] + x[(15, 36)] + x[(16, 36)] + x[(17, 36)] + x[(18, 36)] + x[(20, 36)] + x[(25, 36)] + x[(29, 36)] + x[(32, 36)] = 1
 x[(0, 37)] + x[(11, 37)] + x[(12, 37)] + x[(13, 37)] + x[(14, 37)] + x[(15, 37)] + x[(16, 37)] + x[(17, 37)] + x[(18, 37)] + x[(19, 37)] + x[(20, 37)] + x[(21, 37)] + x[(22, 37)] + x[(24, 37)] + x[(25, 37)] + x[(26, 37)] + x[(27, 37)] + x[(28, 37)] + x[(31, 37)] = 1
 x[(0, 38)] + x[(21, 38)] + x[(22, 38)] + x[(24, 38)] + x[(25, 38)] + x[(26, 38)] + x[(27, 38)] + x[(30, 38)] = 1
 x[(0, 39)] + x[(11, 39)] + x[(12, 39)] + x[(13, 39)] + x[(14, 39)] + x[(15, 39)] + x[(16, 39)] + x[(18, 39)] + x[(19, 39)] + x[(20, 39)] + x[(21, 39)] + x[(22, 39)] + x[(25, 39)] + x[(26, 39)] + x[(28, 39)] + x[(29, 39)] + x[(32, 39)] = 1
 x[(0, 40)] + x[(21, 40)] + x[(22, 40)] + x[(24, 40)] + x[(25, 40)] + x[(26, 40)] + x[(27, 40)] + x[(31, 40)] = 1
 x[(0, 41)] + x[(21, 41)] + x[(23, 41)] + x[(24, 41)] + x[(25, 41)] + x[(27, 41)] + x[(28, 41)] = 1
 x[(0, 42)] + x[(11, 42)] + x[(12, 42)] + x[(13, 42)] + x[(14, 42)] + x[(15, 42)] + x[(16, 42)] + x[(18, 42)] + x[(19, 42)] + x[(20, 42)] + x[(21, 42)] + x[(23, 42)] + x[(24, 42)] + x[(25, 42)] + x[(26, 42)] + x[(27, 42)] + x[(30, 42)] + x[(31, 42)] + x[(32, 42)] = 1
 x[(0, 43)] + x[(19, 43)] + x[(20, 43)] + x[(21, 43)] + x[(22, 43)] + x[(24, 43)] + x[(25, 43)] + x[(26, 43)] + x[(27, 43)] + x[(30, 43)] + x[(32, 43)] + x[(36, 43)] = 1
 x[(0, 44)] + x[(27, 44)] + x[(28, 44)] = 1
 x[(0, 45)] + x[(11, 45)] + x[(12, 45)] + x[(13, 45)] + x[(14, 45)] + x[(15, 45)] + x[(16, 45)] + x[(17, 45)] + x[(18, 45)] + x[(19, 45)] + x[(20, 45)] + x[(21, 45)] + x[(22, 45)] + x[(24, 45)] + x[(25, 45)] + x[(26, 45)] + x[(27, 45)] + x[(28, 45)] + x[(29, 45)] + x[(30, 45)] + x[(31, 45)] + x[(32, 45)] = 1
 x[(0, 46)] + x[(20, 46)] + x[(21, 46)] + x[(24, 46)] + x[(25, 46)] + x[(26, 46)] + x[(27, 46)] + x[(30, 46)] = 1
 x[(0, 47)] + x[(29, 47)] + x[(32, 47)] + x[(36, 47)] = 1
 x[(0, 48)] + x[(19, 48)] + x[(20, 48)] + x[(21, 48)] + x[(22, 48)] + x[(23, 48)] + x[(24, 48)] + x[(25, 48)] + x[(26, 48)] + x[(27, 48)] + x[(28, 48)] = 1
 x[(0, 49)] + x[(23, 49)] + x[(24, 49)] + x[(25, 49)] + x[(26, 49)] + x[(27, 49)] + x[(28, 49)] + x[(31, 49)] + x[(32, 49)] + x[(36, 49)] = 1
 x[(0, 50)] + x[(21, 50)] + x[(22, 50)] + x[(23, 50)] + x[(24, 50)] + x[(25, 50)] + x[(26, 50)] + x[(27, 50)] + x[(28, 50)] + x[(29, 50)] + x[(30, 50)] + x[(32, 50)] + x[(39, 50)] = 1
 x[(0, 51)] + x[(30, 51)] + x[(32, 51)] + x[(39, 51)] + x[(42, 51)] + x[(45, 51)] = 1
 x[(0, 52)] + x[(25, 52)] + x[(26, 52)] + x[(27, 52)] + x[(28, 52)] + x[(29, 52)] + x[(30, 52)] + x[(31, 52)] + x[(32, 52)] + x[(36, 52)] = 1
 x[(0, 53)] + x[(29, 53)] + x[(30, 53)] + x[(31, 53)] + x[(32, 53)] + x[(33, 53)] + x[(36, 53)] + x[(42, 53)] = 1
 x[(0, 54)] + x[(36, 54)] + x[(42, 54)] = 1
 x[(0, 55)] + x[(35, 55)] + x[(36, 55)] + x[(39, 55)] + x[(45, 55)] + x[(46, 55)] = 1
 x[(0, 56)] + x[(42, 56)] + x[(45, 56)] + x[(48, 56)] = 1
 x[(0, 57)] + x[(29, 57)] + x[(30, 57)] + x[(31, 57)] + x[(32, 57)] + x[(33, 57)] + x[(34, 57)] + x[(36, 57)] + x[(37, 57)] + x[(41, 57)] + x[(45, 57)] + x[(46, 57)] = 1
 x[(0, 58)] + x[(29, 58)] + x[(30, 58)] + x[(31, 58)] + x[(32, 58)] + x[(33, 58)] + x[(34, 58)] + x[(35, 58)] + x[(36, 58)] + x[(37, 58)] + x[(39, 58)] + x[(42, 58)] + x[(43, 58)] + x[(45, 58)] + x[(49, 58)] = 1
 x[(0, 59)] + x[(35, 59)] + x[(36, 59)] + x[(37, 59)] + x[(38, 59)] + x[(39, 59)] + x[(41, 59)] + x[(42, 59)] + x[(43, 59)] + x[(45, 59)] + x[(48, 59)] = 1
 x[(0, 60)] + x[(37, 60)] + x[(38, 60)] + x[(39, 60)] + x[(42, 60)] + x[(43, 60)] + x[(45, 60)] + x[(48, 60)] = 1
 x[(0, 61)] + x[(33, 61)] + x[(35, 61)] + x[(36, 61)] + x[(37, 61)] + x[(38, 61)] + x[(39, 61)] + x[(42, 61)] + x[(45, 61)] + x[(46, 61)] + x[(49, 61)] + x[(50, 61)] = 1
 x[(0, 62)] + x[(37, 62)] + x[(39, 62)] + x[(41, 62)] + x[(42, 62)] + x[(43, 62)] + x[(45, 62)] + x[(46, 62)] + x[(48, 62)] + x[(49, 62)] + x[(50, 62)] = 1
 x[(0, 63)] + x[(39, 63)] + x[(40, 63)] + x[(41, 63)] + x[(42, 63)] + x[(43, 63)] + x[(44, 63)] + x[(45, 63)] + x[(46, 63)] + x[(48, 63)] + x[(49, 63)] + x[(52, 63)] + x[(57, 63)] = 1
 x[(0, 64)] + x[(42, 64)] + x[(44, 64)] + x[(45, 64)] + x[(46, 64)] + x[(50, 64)] + x[(52, 64)] = 1
 x[(0, 65)] + x[(40, 65)] + x[(41, 65)] + x[(42, 65)] + x[(43, 65)] + x[(45, 65)] + x[(46, 65)] + x[(50, 65)] + x[(51, 65)] + x[(52, 65)] = 1
 x[(0, 66)] + x[(48, 66)] + x[(51, 66)] + x[(52, 66)] = 1
 x[(0, 67)] + x[(36, 67)] + x[(37, 67)] + x[(38, 67)] + x[(39, 67)] + x[(40, 67)] + x[(41, 67)] + x[(42, 67)] + x[(43, 67)] + x[(45, 67)] + x[(46, 67)] + x[(47, 67)] + x[(48, 67)] + x[(50, 67)] + x[(51, 67)] + x[(53, 67)] = 1
 x[(0, 68)] + x[(37, 68)] + x[(38, 68)] + x[(39, 68)] + x[(40, 68)] + x[(42, 68)] + x[(43, 68)] + x[(45, 68)] + x[(46, 68)] + x[(48, 68)] = 1
 x[(0, 69)] + x[(42, 69)] + x[(43, 69)] + x[(44, 69)] + x[(45, 69)] + x[(46, 69)] + x[(47, 69)] + x[(48, 69)] + x[(49, 69)] + x[(51, 69)] + x[(52, 69)] + x[(57, 69)] = 1
 x[(0, 70)] + x[(33, 70)] + x[(34, 70)] + x[(35, 70)] + x[(36, 70)] + x[(37, 70)] + x[(38, 70)] + x[(39, 70)] + x[(41, 70)] + x[(42, 70)] + x[(43, 70)] + x[(44, 70)] + x[(45, 70)] + x[(46, 70)] + x[(48, 70)] + x[(49, 70)] + x[(50, 70)] + x[(57, 70)] = 1
 x[(0, 71)] + x[(35, 71)] + x[(36, 71)] + x[(37, 71)] + x[(38, 71)] + x[(39, 71)] + x[(40, 71)] + x[(42, 71)] + x[(43, 71)] + x[(44, 71)] + x[(45, 71)] + x[(46, 71)] + x[(47, 71)] + x[(48, 71)] + x[(49, 71)] + x[(51, 71)] = 1
 x[(0, 72)] + x[(49, 72)] + x[(50, 72)] + x[(52, 72)] + x[(53, 72)] + x[(57, 72)] + x[(59, 72)] + x[(61, 72)] = 1
 x[(0, 73)] + x[(37, 73)] + x[(38, 73)] + x[(39, 73)] + x[(40, 73)] + x[(41, 73)] + x[(42, 73)] + x[(43, 73)] + x[(44, 73)] + x[(45, 73)] + x[(46, 73)] + x[(48, 73)] + x[(49, 73)] + x[(50, 73)] + x[(51, 73)] + x[(52, 73)] = 1
 x[(0, 74)] + x[(57, 74)] + x[(61, 74)] + x[(70, 74)] = 1
 x[(0, 75)] + x[(50, 75)] + x[(51, 75)] + x[(52, 75)] + x[(57, 75)] + x[(67, 75)] = 1
 x[(0, 76)] + x[(57, 76)] = 1
 x[(0, 77)] + x[(57, 77)] + x[(70, 77)] = 1
 x[(0, 78)] + x[(48, 78)] + x[(49, 78)] + x[(50, 78)] + x[(51, 78)] + x[(52, 78)] + x[(59, 78)] + x[(61, 78)] = 1
 x[(0, 79)] + x[(57, 79)] + x[(58, 79)] = 1
 x[(0, 80)] + x[(49, 80)] + x[(50, 80)] + x[(51, 80)] + x[(52, 80)] + x[(57, 80)] + x[(58, 80)] + x[(61, 80)] + x[(67, 80)] + x[(71, 80)] = 1
 x[(0, 81)] + x[(41, 81)] + x[(42, 81)] + x[(43, 81)] + x[(44, 81)] + x[(45, 81)] + x[(46, 81)] + x[(47, 81)] + x[(48, 81)] + x[(49, 81)] + x[(50, 81)] + x[(51, 81)] + x[(52, 81)] + x[(54, 81)] + x[(57, 81)] + x[(58, 81)] + x[(67, 81)] = 1
 x[(0, 82)] + x[(58, 82)] + x[(59, 82)] + x[(62, 82)] + x[(67, 82)] + x[(71, 82)] = 1
 x[(0, 83)] + x[(47, 83)] + x[(48, 83)] + x[(49, 83)] + x[(50, 83)] + x[(51, 83)] + x[(52, 83)] + x[(53, 83)] + x[(57, 83)] + x[(58, 83)] + x[(59, 83)] + x[(60, 83)] + x[(61, 83)] + x[(63, 83)] = 1
 x[(0, 84)] + x[(50, 84)] + x[(51, 84)] + x[(52, 84)] + x[(53, 84)] + x[(55, 84)] + x[(57, 84)] + x[(58, 84)] + x[(59, 84)] + x[(62, 84)] + x[(65, 84)] + x[(66, 84)] + x[(68, 84)] + x[(69, 84)] + x[(70, 84)] + x[(71, 84)] = 1
 x[(0, 85)] + x[(60, 85)] + x[(61, 85)] + x[(63, 85)] + x[(64, 85)] + x[(67, 85)] + x[(68, 85)] + x[(70, 85)] + x[(72, 85)] + x[(73, 85)] + x[(81, 85)] = 1
 x[(0, 86)] + x[(58, 86)] + x[(59, 86)] + x[(60, 86)] + x[(61, 86)] + x[(63, 86)] + x[(67, 86)] + x[(68, 86)] + x[(70, 86)] + x[(71, 86)] + x[(78, 86)] + x[(83, 86)] = 1
 x[(0, 87)] + x[(71, 87)] + x[(73, 87)] + x[(81, 87)] + x[(83, 87)] = 1
 x[(0, 88)] + x[(63, 88)] + x[(64, 88)] + x[(67, 88)] + x[(69, 88)] + x[(70, 88)] + x[(71, 88)] + x[(81, 88)] + x[(83, 88)] = 1
 x[(0, 89)] + x[(57, 89)] + x[(58, 89)] + x[(59, 89)] + x[(60, 89)] + x[(61, 89)] + x[(62, 89)] + x[(63, 89)] + x[(64, 89)] + x[(65, 89)] + x[(67, 89)] + x[(68, 89)] + x[(70, 89)] + x[(71, 89)] + x[(73, 89)] + x[(74, 89)] + x[(78, 89)] + x[(81, 89)] = 1
 x[(0, 90)] + x[(67, 90)] + x[(69, 90)] + x[(70, 90)] + x[(71, 90)] + x[(72, 90)] + x[(73, 90)] + x[(75, 90)] + x[(80, 90)] + x[(81, 90)] + x[(83, 90)] = 1
 x[(0, 91)] + x[(69, 91)] + x[(70, 91)] + x[(71, 91)] + x[(72, 91)] + x[(73, 91)] + x[(75, 91)] + x[(78, 91)] + x[(79, 91)] + x[(81, 91)] + x[(84, 91)] = 1
 x[(0, 92)] + x[(59, 92)] + x[(60, 92)] + x[(61, 92)] + x[(62, 92)] + x[(63, 92)] + x[(65, 92)] + x[(66, 92)] + x[(67, 92)] + x[(68, 92)] + x[(69, 92)] + x[(70, 92)] + x[(71, 92)] + x[(72, 92)] + x[(73, 92)] + x[(75, 92)] + x[(76, 92)] + x[(78, 92)] + x[(80, 92)] + x[(81, 92)] + x[(83, 92)] + x[(84, 92)] = 1
 x[(0, 93)] + x[(82, 93)] + x[(83, 93)] + x[(84, 93)] = 1
 x[(0, 94)] + x[(73, 94)] + x[(74, 94)] + x[(77, 94)] + x[(78, 94)] + x[(80, 94)] + x[(81, 94)] + x[(83, 94)] + x[(89, 94)] = 1
 x[(0, 95)] + x[(80, 95)] + x[(81, 95)] + x[(83, 95)] + x[(84, 95)] + x[(86, 95)] = 1
 x[(0, 96)] + x[(73, 96)] + x[(74, 96)] + x[(75, 96)] + x[(76, 96)] + x[(77, 96)] + x[(78, 96)] + x[(81, 96)] + x[(82, 96)] + x[(83, 96)] + x[(84, 96)] + x[(89, 96)] = 1
 x[(0, 97)] + x[(84, 97)] + x[(85, 97)] = 1
 x[(0, 98)] + x[(83, 98)] + x[(84, 98)] + x[(86, 98)] + x[(92, 98)] = 1
 x[(0, 99)] + x[(84, 99)] + x[(86, 99)] + x[(89, 99)] + x[(92, 99)] = 1
 x[(0, 100)] + x[(75, 100)] + x[(76, 100)] + x[(78, 100)] + x[(80, 100)] + x[(81, 100)] + x[(83, 100)] + x[(84, 100)] + x[(86, 100)] + x[(89, 100)] + x[(92, 100)] = 1
 x[(0, 1)] + x[(0, 2)] + x[(0, 3)] + x[(0, 4)] + x[(0, 5)] + x[(0, 6)] + x[(0, 7)] + x[(0, 8)] + x[(0, 9)] + x[(0, 10)] + x[(0, 11)] + x[(0, 12)] + x[(0, 13)] + x[(0, 14)] + x[(0, 15)] + x[(0, 16)] + x[(0, 17)] + x[(0, 18)] + x[(0, 19)] + x[(0, 20)] + x[(0, 21)] + x[(0, 22)] + x[(0, 23)] + x[(0, 24)] + x[(0, 25)] + x[(0, 26)] + x[(0, 27)] + x[(0, 28)] + x[(0, 29)] + x[(0, 30)] + x[(0, 31)] + x[(0, 32)] + x[(0, 33)] + x[(0, 34)] + x[(0, 35)] + x[(0, 36)] + x[(0, 37)] + x[(0, 38)] + x[(0, 39)] + x[(0, 40)] + x[(0, 41)] + x[(0, 42)] + x[(0, 43)] + x[(0, 44)] + x[(0, 45)] + x[(0, 46)] + x[(0, 47)] + x[(0, 48)] + x[(0, 49)] + x[(0, 50)] + x[(0, 51)] + x[(0, 52)] + x[(0, 53)] + x[(0, 54)] + x[(0, 55)] + x[(0, 56)] + x[(0, 57)] + x[(0, 58)] + x[(0, 59)] + x[(0, 60)] + x[(0, 61)] + x[(0, 62)] + x[(0, 63)] + x[(0, 64)] + x[(0, 65)] + x[(0, 66)] + x[(0, 67)] + x[(0, 68)] + x[(0, 69)] + x[(0, 70)] + x[(0, 71)] + x[(0, 72)] + x[(0, 73)] + x[(0, 74)] + x[(0, 75)] + x[(0, 76)] + x[(0, 77)] + x[(0, 78)] + x[(0, 79)] + x[(0, 80)] + x[(0, 81)] + x[(0, 82)] + x[(0, 83)] + x[(0, 84)] + x[(0, 85)] + x[(0, 86)] + x[(0, 87)] + x[(0, 88)] + x[(0, 89)] + x[(0, 90)] + x[(0, 91)] + x[(0, 92)] + x[(0, 93)] + x[(0, 94)] + x[(0, 95)] + x[(0, 96)] + x[(0, 97)] + x[(0, 98)] + x[(0, 99)] + x[(0, 100)] = 44
 x[a], integer, ∀ a ∈ {(0, 1),(1, 0),…,(92, 99),(92, 100)}

[41m solve [00m
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
VRPSolver beta v0.3, 17/11/2019. Web: vrpsolver.math.u-bordeaux.fr
Corresponds to the solver by Pessoa, Sadykov, Uchoa and Vanderbeck (2019)
Paper: dx.doi.org/10.1007/978-3-030-17953-3_27
USE THIS CODE ONLY FOR ACADEMIC PURPOSES AT YOUR OWN RISK
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
BaPCod v045b, 17/11/2019, © Inria Bordeaux, France (license expires 1/12/2021)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
VRPSolver parameters:
GlobalTimeLimit = 21474836
MaxNbOfBBtreeNodeTreated = 100000
treeSearchStrategy = 1
RCSPstopCutGenTimeThresholdInPricing = 5
RCSPhardTimeThresholdInPricing = 10
RCSPnumberOfBucketsPerVertex = 25
RCSPdynamicBucketSteps = 1
RCSPuseBidirectionalSearch = 1
RCSPapplyReducedCostFixing = 1
RCSPmaxNumOfColsPerIteration = 30
RCSPmaxNumOfColsPerExactIteration = 150
RCSPheurLabelingStrategy = 0
StabilizationMinPhaseOfStage = 0
RCSPmaxNumOfLabelsInEnumeration = 1000000
RCSPmaxNumOfEnumeratedSolutions = 10000000
RCSPmaxNumOfEnumSolutionsForMIP = 10000
RCSPinitNGneighbourhoodSize = 8
RCSPmaxNGneighbourhoodSize = 16
RCSPrankOneCutsMaxNumPerRound = 100
RCSPrankOneCutsMaxNumRows = 7
RCSPrankOneCutsMemoryType = 1
CutTailingOffThreshold = 0.015
CutTailingOffCounterThreshold = 3
SafeDualBoundScaleFactor = -1
StrongBranchingPhaseOneCandidatesNumber = 50
StrongBranchingPhaseOneTreeSizeEstimRatio = 0.1
StrongBranchingPhaseTwoCandidatesNumber = 3
StrongBranchingPhaseTwoTreeSizeEstimRatio = 0.1
MaxTimeForRestrictedMasterIpHeur = -1
DivingHeurUseDepthLimit = -1
MaxLDSbreadth = 0
MaxLDSdepth = 0
New model incumbent solution 1e+07, TIME = 0h0m0s3t = 3
Model is built TIME = 0h0m0s89t = 89
************************************************************************************************
**** BaB tree root node
**** Local DB = -1e+12, global bounds : [ -1e+12 , 1e+07 ], TIME = 0h0m0s90t = 90
**** 1 open nodes, 0 columns (0 active), 0 dyn. constrs. (0 active), 204 art. vars. (204 active)
************************************************************************************************
<DWph=2> <it= 10> <et=0.91> <Mt= 0.00> <Spt= 0.00> <nCl=283> <DB=-509508.5000> <Mlp=70491.5000> <PB=10000000> 
<DWph=2> <it= 17> <et=0.93> <Mt= 0.00> <Spt= 0.00> <nCl= 54> <DB=69316.0000> <Mlp=69316.0000> <PB=69316> 
<DWph=1> <it= 18> <et=0.93> <Mt= 0.00> <Spt= 0.00> <nCl=  0> <DB=69316.0000> <Mlp=69316.0000> <PB=69316> 
<DWph=0> <it= 19> <et=0.94> <Mt= 0.00> <Spt= 0.00> <nCl=  0> <DB=69316.0000> <Mlp=69316.0000> <PB=69316> 
ColGenEvalAlg final dual bound: 69316 (rounded: 69316)
New model incumbent solution 69316, TIME = 0h0m0s94t = 94
************************************************************************************************
Search is finished, global bounds : [ 69316 , 69316 ], TIME = 0h0m0s94t = 94
************************************************************************************************
[32mBaPCod : solution defined.[00m
statistics_cols: instance & :Optimal & cutoff & :bcRecRootDb & :bcTimeRootEval & :bcCountNodeProc & :bcRecBestDb & :bcRecBestInc & :bcTimeMain \\
statistics: csp100_Solomon & 1 & 1.0e7 & 69316.00 & 0.94 & 1 & 69316.00 & 69316 & 0.94 \\
########################################################
Route #1: 1 16 
Route #2: 2 14 
Route #3: 3 22 
Route #4: 4 12 28 
Route #5: 5 13 
Route #6: 6 15 
Route #7: 7 21 
Route #8: 8 20 25 
Route #9: 9 23 
Route #10: 10 17 
Route #11: 11 31 37 
Route #12: 18 27 
Route #13: 19 32 36 43 
Route #14: 24 30 38 
Route #15: 26 34 
Route #16: 29 35 
Route #17: 33 53 
Route #18: 39 50 62 
Route #19: 40 68 
Route #20: 41 57 70 
Route #21: 42 54 81 
Route #22: 44 64 
Route #23: 45 51 65 
Route #24: 46 55 
Route #25: 47 69 
Route #26: 48 56 
Route #27: 49 58 80 
Route #28: 52 66 84 
Route #29: 59 78 
Route #30: 60 
Route #31: 61 72 85 
Route #32: 63 83 88 
Route #33: 67 75 90 
Route #34: 71 87 
Route #35: 73 
Route #36: 74 89 94 
Route #37: 76 92 100 
Route #38: 77 96 
Route #39: 79 91 
Route #40: 82 93 
Route #41: 86 95 
Route #42: 97 
Route #43: 98 
Route #44: 99 
Cost 69316.0
########################################################
